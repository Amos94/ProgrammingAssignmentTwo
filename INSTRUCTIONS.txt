If you would like to test my code on your files, please add your corpus in text.txt, target words in T.txt, and basis words in B.txt.

Please note that I used the whole basis(B.txt) once, to make sure the cosine similarity matrix TxB is created and correct.
The other times I worked with B_smaller.txt. This was just for time-related purposes. In any case, the program should not give any error.

In creation of my solution I prefered the OOP approach. So, at the end of the code there is an instance of the class ProgrammingassignmentTwo (pa2Obj).
Every method can be called through this object. Furthermore, every method created returns something, so, if you would like to see the output of any given method,
please use print(pa2Obj.some_method).

For task 6 (Convert the similarity score into distance. The output of this step are two matrices: one for similarity, one for distance.), as output I understood that
those matrices must be printed, so this is what I did. Furthermore, the matrices are also returned in the order specified.

TwoDimensionalDictionary.py is compulsory for the program to work. It is my approach for 2D dictionaries. It is very user friendly and can be used to call cells in a 2D
dictionary as in other programming languages such as C, C++, C#, or Java, i.e., for example dictionary['something']['other thing']). However, for the feature matrix, I
created a special matrix made with numpy (npFeatureMatrix = np.array([]) # FEATURE MATRIX AS NUMPY ARRAY), so it can be used with Clustering_functions.py.

I hope you will understand my code easily, I did my best in a relative short period of time.

Python version used: 3.6.3
O.S. used: Windows 10 x64
Ram: 8gb


Libraries:
certifi==2017.7.27.1
chardet==3.0.4
cycler==0.10.0
cymem==1.31.2
cytoolz==0.8.2
dill==0.2.7.1
en-core-web-sm==1.2.0
ftfy==4.4.3
html5lib==0.999999999
idna==2.6
matplotlib==2.1.0
murmurhash==0.26.4
nltk==3.2.5
numpy==1.13.3
pathlib==1.0.1
plac==0.9.6
preshed==1.0.0
pyparsing==2.2.0
pyreadline==2.1
python-dateutil==2.6.1
pytz==2017.3
regex==2017.9.23
requests==2.18.4
scikit-learn==0.19.1
scipy==1.0.0
six==1.11.0
spacy==1.9.0
termcolor==1.1.0
thinc==6.5.2
toolz==0.8.2
tqdm==4.19.4
ujson==1.35
urllib3==1.22
wcwidth==0.1.7
webencodings==0.5.1
wrapt==1.10.11
